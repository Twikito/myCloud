:root {
	--primary: #4696d0;
	--primary-dark: #2877b0;
	--secondary: #26ec96;
	--secondary-dark: #18a464;
	--secondary-darker: #4c5d55;
}

::selection {
	background-color: var(--primary-dark);
	color: white;
}

* {
	scrollbar-color: #b6cbdb transparent;
	scrollbar-width: thin;
}

/* Only for hoverable devices */
@media (hover: hover) and (pointer: fine) {
	body :not(:hover, :focus, :focus-within) {
		scrollbar-color: transparent transparent;
	}
}

html {
	scroll-behavior: smooth;
}

body {
	margin: 0;
	background-color: whitesmoke;
}

body,
input {
	font-family: 'Noto Serif', sans-serif;
	line-height: 1.5;
	color: #333;
}

header,
nav,
main,
footer div {
	/* Global inline-size definition: 640px in rem */
	max-inline-size: 40rem;
	margin-inline: auto;
	padding: 0 1rem;
}

a {
	color: var(--secondary-dark);
	text-decoration: underline;
	transition: .15s ease-out;
}

a:hover,
a:focus {
	text-decoration: none;
}

strong {
	color: var(--primary-dark);
}

header {
	margin-block: 6rem;
	text-align: center;
	color: var(--primary);
}

header svg {
	display: block;
	inline-size: 40vw;
	max-inline-size: 12rem;
	margin-inline: auto;
	margin-block-end: 1rem;
	fill: white;
	animation: cloud 8s cubic-bezier(0.455, 0.030, 0.515, 0.955) alternate infinite;
	filter:
		drop-shadow(0 0.125em 0 #ddd)
		drop-shadow(0 0.125em 0 #ccc)
		drop-shadow(0 0.125em 0 #bbb)
		drop-shadow(0 0.125em 0.125em rgb(0 0 0 / .4))
		drop-shadow(0 1em 1em rgb(0 0 0 / .3));
}

h1 {
	font-family: 'Source Sans 3', sans-serif;
	margin: 0;
	display: inline flow-root;
	font-weight: 500;
	font-size: clamp(3em, 15vw, 5em);
	line-height: .8;
	text-align: end;
	letter-spacing: -.05em;
}

h1 span {
	display: block;
	margin-inline-end: .1em;
	font-size: .3em;
	letter-spacing: -.02em;
}

body > input,
body > label {
	display: none;
}

nav {
	display: block flex;
	flex-flow: row no-wrap;
	justify-content: space-between;
}

nav a {
	flex: 0 1 5.5em;
	background-color: var(--primary);
	color: white;
	box-sizing: border-box;
	padding: .25em;
	font-family: 'Oswald', sans-serif;
	font-size: 1.25em;
	text-decoration: none;
	text-align: center;
	transition-property: background-color;
}

nav a:hover,
nav a:focus {
	background-color: var(--secondary);
	color: var(--secondary-darker);
}

main section {
	padding: 1.5em 0;
}

h2,
h3 {
	margin: 1em 0 .5em;
	font-family: 'Oswald', sans-serif;
	font-size: clamp(2em, 10vw, 3.5em);
	font-weight: 500;
	line-height: 1.2;
	color: var(--primary);
	text-shadow: 0 -1px 0 #222;
	text-transform: capitalize;
}

h2 {
	position: relative;
}

h2 a {
	position: absolute;
	inset-inline-end: 100%;
	font-weight: 300;
	color: silver;
	text-decoration: none;
	text-shadow: none;
	opacity: 0;
}

h2:hover a,
h2 a:focus {
	opacity: 1;
}

h2 a:hover,
h2 a:focus {
	color: var(--secondary-dark);
}

blockquote {
	margin-block: 2rem;
	margin-inline: 0;
	padding-inline: 2rem;
	border-inline-start: .25rem solid var(--primary);
}

blockquote p {
	font-style: italic;
	quotes: "“" "”" "‘" "’";
}

blockquote p::before {
	content: open-quote;
}

blockquote p::after {
	content: close-quote;
}

blockquote cite {
	display: block;
	text-align: end;
}

blockquote cite::before {
	content: '— ';
}

li::marker {
	color: darkgrey;
}

abbr {
	text-decoration: underline dotted currentcolor;
	text-underline-offset: 0.125em;
}

figure {
	margin: 2rem 0;
}

figcaption,
caption {
	font-style: italic;
	font-size: .875em;
}

figcaption {
	text-align: end;
}

caption {
	margin-block-start: 1rem;
	text-align: center;
	caption-side: bottom;
}

pre,
code {
	font-family: 'JetBrains Mono', monospace;;
}

pre {
	padding: 1rem;
	background-color: white;
	border: 1px solid var(--primary);
	box-shadow: 0 0 1em rgb(116 208 255 / .5);
	border-radius: 1em;
	overflow: auto;
}

code {
	padding-inline: .125em;
	background-color: white;
	border: 1px solid var(--primary);
}

table {
	inline-size: 100%;
	margin: 2rem 0;
	overflow: hidden;
	border-collapse: collapse;
}

col {
	inline-size: calc(100% / 4);
	transition: background-color .15s ease-out;
}

col:target {
	background-color: #26ec9644;
}

table:not(:has(col:target, tbody td:hover, tbody td:focus)) col:nth-child(even) {
	background-color: #eaeaea;
}

table:not(:has(col:target, tbody td:hover, tbody td:focus)) tbody tr:nth-child(odd) {
	background-color: white;
	transition: background-color .15s ease-out;
}

th,
td {
	padding: .75rem 2%;
}

tbody th,
tbody td {
	font-size: 0.875rem;
	word-break: break-word;
	text-align: start;
	vertical-align: top;
}

tbody td {
	position: relative;
}

tbody td:hover,
tbody td:focus {
	color: black;
}

tbody td::before,
tbody td::after {
	position: absolute;
	z-index: -1;
	background-color: var(--primary);
	opacity: 0;
	content: '';
	pointer-events: none;
	transition: opacity .15s ease-out;
}

tbody td::before {
	inset-block: 0;
	inset-inline: -100vw;
}

tbody td::after {
	inset-block: -100vw;
	inset-inline: 0;
}

tbody td:hover::before,
tbody td:hover::after {
	opacity: .1;
}

tbody td:focus::before,
tbody td:focus::after {
	opacity: .2;
}

thead th,
tfoot td {
	font-family: 'Oswald', sans-serif;
	font-weight: bold;
	text-transform: uppercase;
	text-align: center;
}

thead th a {
	color: var(--primary-dark);
}

tfoot th {
	text-align: start;
}

tfoot td {
	color: var(--secondary-dark);
}

form {
	position: relative;
	display: block flex;
	max-inline-size: 25em;
	margin: 3em auto;
	justify-content: center;
	align-items: stretch;
	border: 1px solid var(--primary);
	border-radius: .5rem;
	background-color: var(--primary);
}

form:hover {
	border-color: var(--primary-dark);
}

form:focus-within {
	box-shadow: 0 0 3em black;
}

form::before {
	content: '';
	position: fixed;
	inset: 0;
	z-index: 1;
	background: rgb(0 0 0 / .7);
	opacity: 0;
	visibility: hidden;
	pointer-events: none;
	transition: all .15s ease-out;
}

form:focus-within::before {
	opacity: 1;
	visibility: visible;
}

form label {
	position: absolute;
	z-index: 3;
	inset-block-start: 50%;
	inset-inline-start: .5rem;
	translate: 0 -50%;
	font-size: 1.25em;
	font-style: italic;
	color: grey;
	transition: .15s ease-out;
}

form:focus-within label,
form:has(input:not(:placeholder-shown)) label {
	translate: -.5rem -220%;
	font-size: 1em;
	color: var(--primary-dark);
}

form:focus-within label {
	color: white !important;
}

form input {
	z-index: 2;
	inline-size: 100%;
	padding: .5rem;
	border: none;
	outline: none;
	border-start-start-radius: .5rem;
	border-end-start-radius: .5rem;
	box-sizing: border-box;
	background: white;
	font-size: 1.25em;
}

form button {
	z-index: 4;
	padding-inline: .5rem;
	background-color: var(--primary);
	border: none;
	border-start-end-radius: .5rem;
	border-end-end-radius: .5rem;
	color: white;
	font-size: 1.25rem;
	font-family: 'Oswald', sans-serif;
	text-transform: uppercase;
	cursor: pointer;
	transition: .15s ease-out;
}

form button:hover,
form button:focus {
	background-color: var(--secondary);
	color: var(--secondary-darker);
}

main div {
	margin: 3rem 0;
	text-align: center;
}

main div a {
	display: inline flex;
	align-items: center;
	gap: .25em;
	background-color: #ffc843;
	color: #b25f03;
	text-decoration: none;
	font-family: 'Oswald', sans-serif;
	font-size: 2.5em;
	padding: .1em .5em;
	text-transform: capitalize;
	box-shadow: 0 .1em 0 #ffa823;
}

main div a:hover,
main div a:focus {
	background-color: var(--secondary);
	color: var(--secondary-darker);
	translate: 0 .1em;
	box-shadow: 0 .0 0 var(--secondary-dark);
}

main div a svg {
	inline-size: 1em;
	block-size: 1em;
	flex: 0 0 1em;
	fill: currentcolor;
	transition: inherit;
	transition-property: rotate;
}

main div a:hover svg,
main div a:focus svg {
	rotate: 360deg;
}

body > footer {
	padding: 1.5em 0 2em;
	background-color: var(--primary);
	color: white;
}

footer div {
	display: block grid;
	grid-template-columns: repeat(2, 1fr);
	grid-gap: 1.5em;
	grid-auto-flow: row;
}

footer h3 {
	color: inherit;
	text-shadow: none;
}

footer footer {
	font-style: italic;
}

footer a {
	color: inherit;
	font-weight: bold;
}

@media (max-width: 30em) {
	header {
		margin-block-end: 1rem;
	}
	
	body > input {
		position: fixed;
		display: initial;
		/* Do not use `display: none` or `visibility: hidden` to keep it focusable */
		opacity: 0;
		inset-block-start: 0;
		inset-inline-start: 0;
	}
	
	body > label {
		position: absolute;
		display: initial;
		cursor: pointer;
		color: var(--primary);
		transition: .15s ease-out;
	}
	
	body > label:hover,
	body > input:focus ~ label {
		color: var(--primary-dark);
	}
	
	body > input:checked ~ label {
		color: white;
	}
	
	body > label svg {
		position: fixed;
		inset-block-start: 1rem;
		inset-inline-start: 1rem;
		z-index: 10;
		display: block;
		inline-size: 1em;
		block-size: 1em;
		font-size: 1.6875rem;
		fill: currentcolor;
		transition: rotate .2s ease-in-out;
	}
	
	body > input:checked ~ label svg {
		rotate: 180deg;
	}
	
	body > label rect {
		transition: .15s ease-out, rotate .3s cubic-bezier(0.61, 1, 0.88, 1);
	}
	
	body > label rect:nth-child(1) {
		transform-origin: 3px 3px;
	}
	
	body > label rect:nth-child(2) {
		transform-origin: center;
	}
	
	body > label rect:nth-child(3) {
		transform-origin: 3px 15px;
	}
	
	body > input:checked ~ label rect:nth-child(1) {
		transform-origin: 3px 3px;
		translate: 1.75px 1.75px;
		rotate: 45deg;
	}
	
	body > input:checked ~ label rect:nth-child(2) {
		scale: 0 1;
	}
	
	body > input:checked ~ label rect:nth-child(3) {
		transform-origin: 3px 15px;
		translate: 1.75px -1.75px;
		rotate: -45deg;
	}
	
	body > label span {
		/* sr-only: accessibility with screen readers */
		position: absolute;
		width: 1px;
		height: 1px;
		padding: 0;
		margin: -1px;
		overflow: hidden;
		clip: rect(0, 0, 0, 0);
		white-space: nowrap;
		border-width: 0;
	}
	
	body > label::before {
		/* Outside nav area */
		position: fixed;
		inset: 0;
		z-index: 8;
		visibility: hidden;
		opacity: 0;
		background-color: rgb(255 255 255 / .5);
		pointer-events: none;
		backdrop-filter: blur(2px);
		transition: inherit;
		content: '';
	}
	
	body > input:checked ~ label::before {
		visibility: visible;
		opacity: 1;
		pointer-events: auto;
	}
	
	nav {
		position: fixed;
		inset-block-start: 0;
		inset-inline-start: 0;
		inset-block-end: 0;
		z-index: 9;
		padding: 4rem 1rem 1rem;
		flex-direction: column;
		justify-content: flex-start;
		gap: .5rem;
		visibility: hidden; /* Makes navigation unfocusable */
		translate: -100%;
		background-color: var(--primary);
		transition: .15s ease-out;
	}
	
	body > input:checked ~ nav {
		translate: 0;
		box-shadow: 0 0 3em #0008;
		visibility: visible;
	}
	
	nav a {
		flex-basis: auto;
		background-color: none;
		text-align: start;
	}
	
	nav a:hover,
	nav a:focus {
		background-color: white;
		color: var(--primary);
	}
	
	table {
		overflow: initial;
	}
	
	colgroup {
		display: none;
	}
	
	tr {
		display: block flex;
		margin: 1em 0;
		flex-flow: row wrap;
		align-items: stretch;
		border: solid #d0d0d0;
		border-width: .125em 0;
		background-color: white;
	}
	
	tr > * {
		display: inline flow-root;
		box-sizing: border-box;
		flex: 1;
	}
	
	th:nth-child(even),
	td:nth-child(even) {
		background-color: #f0f0f0;
	}
	
	th:first-child {
		text-align: center;
	}
	
	thead {
		position: sticky;
		inset-block-start: .25rem;
	}
	
	thead tr {
		margin: 0;
		border-color: var(--primary);
	}
	
	thead th:first-child {
		display: none;
	}
	
	tbody th,
	tfoot th {
		flex-basis: 100%;
	}
	
	tbody td {
		position: initial;
	}
	
	tbody td:hover,
	tbody td:focus {
		color: currentcolor;
	}
	
	tbody td::before,
	tbody td::after {
		content: none;
	}
	
	form label,
	form input {
		font-size: 1em;	
	}
	
	main div a {
		font-size: 2em;
	}
	
	footer div {
		grid-template-columns: auto;
	}
}

@keyframes cloud {
	from {
		translate: 2em;
	}

	to {
		translate: -2em;
	}
}
